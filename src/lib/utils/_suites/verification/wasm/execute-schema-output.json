[
  {
    "title": "set_address",
    "description": "Set address",
    "schema": {
      "type": "object",
      "required": ["set_address"],
      "properties": {
        "set_address": {
          "type": "object",
          "required": ["address", "address_type"],
          "properties": {
            "address": {
              "type": "string"
            },
            "address_type": {
              "$ref": "#/definitions/MarsAddressType"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "MarsAddressType": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["incentives", "oracle", "red_bank", "rewards_collector"]
            },
            {
              "description": "Protocol admin is an ICS-27 interchain account controlled by Mars Hub's x/gov module. This account will take the owner and admin roles of red-bank contracts.\n\nOwner means the account who can invoke certain priviliged execute methods on a contract, such as updating the config. Admin means the account who can migrate a contract.",
              "type": "string",
              "enum": ["protocol_admin"]
            },
            {
              "description": "The `fee_collector` module account controlled by Mars Hub's x/distribution module. Funds sent to this account will be distributed as staking rewards.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": ["fee_collector"]
            },
            {
              "description": "The module account controlled by the by Mars Hub's x/safety module. Funds sent to this account will be deposited into the safety fund.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": ["safety_fund"]
            }
          ]
        },
        "OwnerUpdate": {
          "oneOf": [
            {
              "description": "Proposes a new owner to take role. Only current owner can execute.",
              "type": "object",
              "required": ["propose_new_owner"],
              "properties": {
                "propose_new_owner": {
                  "type": "object",
                  "required": ["proposed"],
                  "properties": {
                    "proposed": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Clears the currently proposed owner. Only current owner can execute.",
              "type": "string",
              "enum": ["clear_proposed"]
            },
            {
              "description": "Promotes the proposed owner to be the current one. Only the proposed owner can execute.",
              "type": "string",
              "enum": ["accept_proposed"]
            },
            {
              "description": "Throws away the keys to the Owner role forever. Once done, no owner can ever be set later.",
              "type": "string",
              "enum": ["abolish_owner_role"]
            }
          ]
        }
      }
    }
  },
  {
    "title": "update_owner",
    "description": "Manages admin role state",
    "schema": {
      "type": "object",
      "required": ["update_owner"],
      "properties": {
        "update_owner": {
          "$ref": "#/definitions/OwnerUpdate"
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "MarsAddressType": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["incentives", "oracle", "red_bank", "rewards_collector"]
            },
            {
              "description": "Protocol admin is an ICS-27 interchain account controlled by Mars Hub's x/gov module. This account will take the owner and admin roles of red-bank contracts.\n\nOwner means the account who can invoke certain priviliged execute methods on a contract, such as updating the config. Admin means the account who can migrate a contract.",
              "type": "string",
              "enum": ["protocol_admin"]
            },
            {
              "description": "The `fee_collector` module account controlled by Mars Hub's x/distribution module. Funds sent to this account will be distributed as staking rewards.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": ["fee_collector"]
            },
            {
              "description": "The module account controlled by the by Mars Hub's x/safety module. Funds sent to this account will be deposited into the safety fund.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": ["safety_fund"]
            }
          ]
        },
        "OwnerUpdate": {
          "oneOf": [
            {
              "description": "Proposes a new owner to take role. Only current owner can execute.",
              "type": "object",
              "required": ["propose_new_owner"],
              "properties": {
                "propose_new_owner": {
                  "type": "object",
                  "required": ["proposed"],
                  "properties": {
                    "proposed": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Clears the currently proposed owner. Only current owner can execute.",
              "type": "string",
              "enum": ["clear_proposed"]
            },
            {
              "description": "Promotes the proposed owner to be the current one. Only the proposed owner can execute.",
              "type": "string",
              "enum": ["accept_proposed"]
            },
            {
              "description": "Throws away the keys to the Owner role forever. Once done, no owner can ever be set later.",
              "type": "string",
              "enum": ["abolish_owner_role"]
            }
          ]
        }
      }
    }
  }
]
